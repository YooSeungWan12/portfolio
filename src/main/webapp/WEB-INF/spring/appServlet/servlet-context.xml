<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 클라이언트에서 접근이 가능하도록 설정된 구문   맵핑주소,  자원으로쓸 폴더.-->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 클라이언트에서 직접 참조되는 자원을 요청하기위한 메핑주소설정 -->
	<resources mapping="/bower_components/**" location="/resources/bower_components/" />
	<resources mapping="/dist/**" location="/resources/dist/" />
	<resources mapping="/plugins/**" location="/resources/plugins/" />
	<!-- ckeditor4 에서 응답받은 업로드 경로매핑주소 -->
	<resources mapping="/upload/**" location="/resources/upload/" />
	<resources mapping="/images/**" location="/resources/images/"></resources>
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 처음으로 프로젝트 만들때 자동으로설정됨. -->
	<context:component-scan base-package="com.docmall.controller" />
	<!-- com.docmall.controller안 패키지 안 클래스들중 @Controller,@RestController 가 설정되어있는 클래스를 찾아내서 bean으로 생성한다.-->
	
	<!-- 서블릿 3.0이상에서 제공하는 업로드 API를 이용한 bean생성구문 -->
	<!-- 이부분 id는 임의로정하면안된다.  이유: 이름이 지정되어있는 얘라서. -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
	
	
	<!-- String uploadPath = new String("C:\\upload\\real");와 같은뜻 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:\\upload\\real"></beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="authInterceptor" class="com.docmall.interceptor.AuthInterceptor"/>
	<beans:bean id="adminInterceptor" class="com.docmall.interceptor.AdminInterceptor"/>
	
	<interceptors>
		<interceptor>
			<mapping path="/member/*"/>
			 
			<mapping path="/cart/*"/>
			<mapping path="/order/*"/>
			<mapping path="/product/*"/>
			<mapping path="/review/*"/>
			
			<exclude-mapping path="/member/login"/>
			<exclude-mapping path="/member/join"/>
			<exclude-mapping path="/member/checkUserID"/>
			<exclude-mapping path="/product/displayFile"/>
			<exclude-mapping path="/member/forgetPW"/>

			
			<beans:ref bean="authInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/admin/*"/> <!--  ** 는 함부로 쓸수없다... 이유는 오류가날수있따. -->
			<mapping path="/admin/product/*"/>
			<mapping path="/admin/order/*"/>
			<mapping path="/admin/chart/*"/>
		
			<exclude-mapping path="/admin/main"/>
			<exclude-mapping path="/admin/adminLogin"/>
			<beans:ref bean="adminInterceptor"/>
		</interceptor>
	</interceptors>
	

	
</beans:beans>
